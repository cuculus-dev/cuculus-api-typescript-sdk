/* tslint:disable */
/* eslint-disable */
/**
 * Cuculus API
 * The Cuculus API description
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserProfile
 */
export interface UserProfile {
    /**
     * 
     * @type {number}
     * @memberof UserProfile
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    username: string;
    /**
     * 
     * @type {Date}
     * @memberof UserProfile
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    profileImageUrl: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfile
     */
    _protected: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserProfile
     */
    url: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserProfile
     */
    verified: boolean;
}

/**
 * Check if a given object implements the UserProfile interface.
 */
export function instanceOfUserProfile(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "username" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "profileImageUrl" in value;
    isInstance = isInstance && "_protected" in value;
    isInstance = isInstance && "url" in value;
    isInstance = isInstance && "verified" in value;

    return isInstance;
}

export function UserProfileFromJSON(json: any): UserProfile {
    return UserProfileFromJSONTyped(json, false);
}

export function UserProfileFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserProfile {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'username': json['username'],
        'createdAt': (new Date(json['created_at'])),
        'description': json['description'],
        'profileImageUrl': json['profile_image_url'],
        '_protected': json['protected'],
        'url': json['url'],
        'verified': json['verified'],
    };
}

export function UserProfileToJSON(value?: UserProfile | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'username': value.username,
        'created_at': (value.createdAt.toISOString()),
        'description': value.description,
        'profile_image_url': value.profileImageUrl,
        'protected': value._protected,
        'url': value.url,
        'verified': value.verified,
    };
}

