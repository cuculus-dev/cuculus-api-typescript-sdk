/* tslint:disable */
/* eslint-disable */
/**
 * Cuculus API
 * The Cuculus API description
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserWithFollows
 */
export interface UserWithFollows {
    /**
     * 
     * @type {number}
     * @memberof UserWithFollows
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof UserWithFollows
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserWithFollows
     */
    username: string;
    /**
     * 
     * @type {Date}
     * @memberof UserWithFollows
     */
    createdAt: Date;
    /**
     * 
     * @type {string}
     * @memberof UserWithFollows
     */
    bio: string;
    /**
     * 
     * @type {string}
     * @memberof UserWithFollows
     */
    profileImageUrl: string;
    /**
     * 非公開アカウントかどうか
     * @type {boolean}
     * @memberof UserWithFollows
     */
    isPrivate: boolean;
    /**
     * 
     * @type {string}
     * @memberof UserWithFollows
     */
    url: string;
    /**
     * 
     * @type {boolean}
     * @memberof UserWithFollows
     */
    verified: boolean;
    /**
     * リモートユーザーかどうか
     * @type {boolean}
     * @memberof UserWithFollows
     */
    isRemote: boolean;
    /**
     * フォロワー数
     * @type {number}
     * @memberof UserWithFollows
     */
    followersCount?: number;
    /**
     * フォロー数
     * @type {number}
     * @memberof UserWithFollows
     */
    followingCount?: number;
}

/**
 * Check if a given object implements the UserWithFollows interface.
 */
export function instanceOfUserWithFollows(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('name' in value)) return false;
    if (!('username' in value)) return false;
    if (!('createdAt' in value)) return false;
    if (!('bio' in value)) return false;
    if (!('profileImageUrl' in value)) return false;
    if (!('isPrivate' in value)) return false;
    if (!('url' in value)) return false;
    if (!('verified' in value)) return false;
    if (!('isRemote' in value)) return false;
    return true;
}

export function UserWithFollowsFromJSON(json: any): UserWithFollows {
    return UserWithFollowsFromJSONTyped(json, false);
}

export function UserWithFollowsFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserWithFollows {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'username': json['username'],
        'createdAt': (new Date(json['created_at'])),
        'bio': json['bio'],
        'profileImageUrl': json['profile_image_url'],
        'isPrivate': json['is_private'],
        'url': json['url'],
        'verified': json['verified'],
        'isRemote': json['is_remote'],
        'followersCount': json['followers_count'] == null ? undefined : json['followers_count'],
        'followingCount': json['following_count'] == null ? undefined : json['following_count'],
    };
}

export function UserWithFollowsToJSON(value?: UserWithFollows | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'username': value['username'],
        'created_at': ((value['createdAt']).toISOString()),
        'bio': value['bio'],
        'profile_image_url': value['profileImageUrl'],
        'is_private': value['isPrivate'],
        'url': value['url'],
        'verified': value['verified'],
        'is_remote': value['isRemote'],
        'followers_count': value['followersCount'],
        'following_count': value['followingCount'],
    };
}

