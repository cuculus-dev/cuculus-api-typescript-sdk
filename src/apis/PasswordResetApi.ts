/* tslint:disable */
/* eslint-disable */
/**
 * Cuculus API
 * The Cuculus API description
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  PasswordReset,
  PasswordResetRequest,
} from '../models/index';
import {
    PasswordResetFromJSON,
    PasswordResetToJSON,
    PasswordResetRequestFromJSON,
    PasswordResetRequestToJSON,
} from '../models/index';

export interface RequestPasswordResetRequest {
    passwordResetRequest: PasswordResetRequest;
}

export interface ResetPasswordRequest {
    passwordReset: PasswordReset;
}

/**
 * 
 */
export class PasswordResetApi extends runtime.BaseAPI {

    /**
     * パスワードの再設定をリクエストする
     */
    async requestPasswordResetRaw(requestParameters: RequestPasswordResetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.passwordResetRequest === null || requestParameters.passwordResetRequest === undefined) {
            throw new runtime.RequiredError('passwordResetRequest','Required parameter requestParameters.passwordResetRequest was null or undefined when calling requestPasswordReset.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v0/password-reset/request`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PasswordResetRequestToJSON(requestParameters.passwordResetRequest),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * パスワードの再設定をリクエストする
     */
    async requestPasswordReset(requestParameters: RequestPasswordResetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.requestPasswordResetRaw(requestParameters, initOverrides);
    }

    /**
     * パスワードの再設定を確定する
     */
    async resetPasswordRaw(requestParameters: ResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters.passwordReset === null || requestParameters.passwordReset === undefined) {
            throw new runtime.RequiredError('passwordReset','Required parameter requestParameters.passwordReset was null or undefined when calling resetPassword.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/v0/password-reset/confirm`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PasswordResetToJSON(requestParameters.passwordReset),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     * パスワードの再設定を確定する
     */
    async resetPassword(requestParameters: ResetPasswordRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.resetPasswordRaw(requestParameters, initOverrides);
    }

}
